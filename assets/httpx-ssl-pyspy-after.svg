<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="490" onload="init(evt)" viewBox="0 0 1200 490" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="490" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">./.venv/bin/py-spy record --pid 9416 --output fixed-maybe-2.svg</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="479.00"> </text><svg id="frames" x="10" width="1180" total_samples="37"><g><title>_add_reader (asyncio/selector_events.py:752) (1 samples, 2.70%)</title><rect x="16.2162%" y="164" width="2.7027%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="1"/><text x="16.4662%" y="174.50">_a..</text></g><g><title>_add_reader (asyncio/selector_events.py:253) (1 samples, 2.70%)</title><rect x="16.2162%" y="180" width="2.7027%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="1"/><text x="16.4662%" y="190.50">_a..</text></g><g><title>_set_result_unless_cancelled (asyncio/futures.py:312) (1 samples, 2.70%)</title><rect x="18.9189%" y="164" width="2.7027%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="1"/><text x="19.1689%" y="174.50">_s..</text></g><g><title>call_soon (asyncio/base_events.py:754) (1 samples, 2.70%)</title><rect x="18.9189%" y="180" width="2.7027%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="1"/><text x="19.1689%" y="190.50">ca..</text></g><g><title>_call_soon (asyncio/base_events.py:770) (1 samples, 2.70%)</title><rect x="18.9189%" y="196" width="2.7027%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="1"/><text x="19.1689%" y="206.50">_c..</text></g><g><title>__init__ (asyncio/events.py:38) (1 samples, 2.70%)</title><rect x="18.9189%" y="212" width="2.7027%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="1"/><text x="19.1689%" y="222.50">__..</text></g><g><title>_sock_write_done (asyncio/selector_events.py:525) (1 samples, 2.70%)</title><rect x="21.6216%" y="164" width="2.7027%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="1"/><text x="21.8716%" y="174.50">_s..</text></g><g><title>remove_writer (asyncio/selector_events.py:346) (1 samples, 2.70%)</title><rect x="21.6216%" y="180" width="2.7027%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="1"/><text x="21.8716%" y="190.50">re..</text></g><g><title>_remove_writer (asyncio/selector_events.py:310) (1 samples, 2.70%)</title><rect x="21.6216%" y="196" width="2.7027%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="1"/><text x="21.8716%" y="206.50">_r..</text></g><g><title>get_key (selectors.py:191) (1 samples, 2.70%)</title><rect x="21.6216%" y="212" width="2.7027%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="1"/><text x="21.8716%" y="222.50">ge..</text></g><g><title>__getitem__ (selectors.py:72) (1 samples, 2.70%)</title><rect x="21.6216%" y="228" width="2.7027%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="1"/><text x="21.8716%" y="238.50">__..</text></g><g><title>_fileobj_lookup (selectors.py:225) (1 samples, 2.70%)</title><rect x="21.6216%" y="244" width="2.7027%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="1"/><text x="21.8716%" y="254.50">_f..</text></g><g><title>__aexit__ (httpx/_client.py:1997) (1 samples, 2.70%)</title><rect x="24.3243%" y="180" width="2.7027%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="1"/><text x="24.5743%" y="190.50">__..</text></g><g><title>__aexit__ (httpx/_transports/default.py:332) (1 samples, 2.70%)</title><rect x="24.3243%" y="196" width="2.7027%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="1"/><text x="24.5743%" y="206.50">__..</text></g><g><title>__aexit__ (httpcore/_async/connection_pool.py:326) (1 samples, 2.70%)</title><rect x="24.3243%" y="212" width="2.7027%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="1"/><text x="24.5743%" y="222.50">__..</text></g><g><title>aclose (httpcore/_async/connection_pool.py:307) (1 samples, 2.70%)</title><rect x="24.3243%" y="228" width="2.7027%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="24.5743%" y="238.50">ac..</text></g><g><title>aclose (httpcore/_async/connection.py:159) (1 samples, 2.70%)</title><rect x="24.3243%" y="244" width="2.7027%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="24.5743%" y="254.50">ac..</text></g><g><title>aclose (httpcore/_async/http11.py:217) (1 samples, 2.70%)</title><rect x="24.3243%" y="260" width="2.7027%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="1"/><text x="24.5743%" y="270.50">ac..</text></g><g><title>aclose (httpcore/backends/asyncio.py:52) (1 samples, 2.70%)</title><rect x="24.3243%" y="276" width="2.7027%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="1"/><text x="24.5743%" y="286.50">ac..</text></g><g><title>aclose (anyio/streams/tls.py:192) (1 samples, 2.70%)</title><rect x="24.3243%" y="292" width="2.7027%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="1"/><text x="24.5743%" y="302.50">ac..</text></g><g><title>aclose (anyio/_backends/_asyncio.py:1319) (1 samples, 2.70%)</title><rect x="24.3243%" y="308" width="2.7027%" height="15" fill="rgb(249,33,26)" fg:x="9" fg:w="1"/><text x="24.5743%" y="318.50">ac..</text></g><g><title>write_eof (asyncio/selector_events.py:970) (1 samples, 2.70%)</title><rect x="24.3243%" y="324" width="2.7027%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="1"/><text x="24.5743%" y="334.50">wr..</text></g><g><title>getproxies_environment (urllib/request.py:2500) (1 samples, 2.70%)</title><rect x="27.0270%" y="244" width="2.7027%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="1"/><text x="27.2770%" y="254.50">ge..</text></g><g><title>__iter__ (_collections_abc.py:906) (1 samples, 2.70%)</title><rect x="27.0270%" y="260" width="2.7027%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="27.2770%" y="270.50">__..</text></g><g><title>__getitem__ (os.py:676) (1 samples, 2.70%)</title><rect x="27.0270%" y="276" width="2.7027%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="27.2770%" y="286.50">__..</text></g><g><title>__init__ (httpx/_client.py:1392) (4 samples, 10.81%)</title><rect x="27.0270%" y="180" width="10.8108%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="4"/><text x="27.2770%" y="190.50">__init__ (httpx/..</text></g><g><title>_get_proxy_map (httpx/_client.py:216) (4 samples, 10.81%)</title><rect x="27.0270%" y="196" width="10.8108%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="4"/><text x="27.2770%" y="206.50">_get_proxy_map (..</text></g><g><title>get_environment_proxies (httpx/_utils.py:307) (4 samples, 10.81%)</title><rect x="27.0270%" y="212" width="10.8108%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="4"/><text x="27.2770%" y="222.50">get_environment_..</text></g><g><title>getproxies (urllib/request.py:2652) (4 samples, 10.81%)</title><rect x="27.0270%" y="228" width="10.8108%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="4"/><text x="27.2770%" y="238.50">getproxies (urll..</text></g><g><title>getproxies_macosx_sysconf (urllib/request.py:2634) (3 samples, 8.11%)</title><rect x="29.7297%" y="244" width="8.1081%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="3"/><text x="29.9797%" y="254.50">getproxies_..</text></g><g><title>main (main.py:12) (6 samples, 16.22%)</title><rect x="24.3243%" y="164" width="16.2162%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="6"/><text x="24.5743%" y="174.50">main (main.py:12)</text></g><g><title>__init__ (httpx/_client.py:1394) (1 samples, 2.70%)</title><rect x="37.8378%" y="180" width="2.7027%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="38.0878%" y="190.50">__..</text></g><g><title>_init_transport (httpx/_client.py:1442) (1 samples, 2.70%)</title><rect x="37.8378%" y="196" width="2.7027%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="1"/><text x="38.0878%" y="206.50">_i..</text></g><g><title>__init__ (httpx/_transports/default.py:264) (1 samples, 2.70%)</title><rect x="37.8378%" y="212" width="2.7027%" height="15" fill="rgb(254,191,54)" fg:x="14" fg:w="1"/><text x="38.0878%" y="222.50">__..</text></g><g><title>__init__ (httpcore/_async/connection_pool.py:107) (1 samples, 2.70%)</title><rect x="37.8378%" y="228" width="2.7027%" height="15" fill="rgb(241,83,37)" fg:x="14" fg:w="1"/><text x="38.0878%" y="238.50">__..</text></g><g><title>_build_request_auth (httpx/_client.py:451) (1 samples, 2.70%)</title><rect x="40.5405%" y="228" width="2.7027%" height="15" fill="rgb(233,36,39)" fg:x="15" fg:w="1"/><text x="40.7905%" y="238.50">_b..</text></g><g><title>username (httpx/_urls.py:158) (1 samples, 2.70%)</title><rect x="40.5405%" y="244" width="2.7027%" height="15" fill="rgb(226,3,54)" fg:x="15" fg:w="1"/><text x="40.7905%" y="254.50">us..</text></g><g><title>userinfo (rfc3986/_mixin.py:81) (1 samples, 2.70%)</title><rect x="40.5405%" y="260" width="2.7027%" height="15" fill="rgb(245,192,40)" fg:x="15" fg:w="1"/><text x="40.7905%" y="270.50">us..</text></g><g><title>authority_info (rfc3986/_mixin.py:31) (1 samples, 2.70%)</title><rect x="40.5405%" y="276" width="2.7027%" height="15" fill="rgb(238,167,29)" fg:x="15" fg:w="1"/><text x="40.7905%" y="286.50">au..</text></g><g><title>_match_subauthority (rfc3986/_mixin.py:57) (1 samples, 2.70%)</title><rect x="40.5405%" y="292" width="2.7027%" height="15" fill="rgb(232,182,51)" fg:x="15" fg:w="1"/><text x="40.7905%" y="302.50">_m..</text></g><g><title>send (httpx/_client.py:1612) (2 samples, 5.41%)</title><rect x="40.5405%" y="212" width="5.4054%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="2"/><text x="40.7905%" y="222.50">send (h..</text></g><g><title>_build_request_auth (httpx/_client.py:456) (1 samples, 2.70%)</title><rect x="43.2432%" y="228" width="2.7027%" height="15" fill="rgb(208,69,12)" fg:x="16" fg:w="1"/><text x="43.4932%" y="238.50">_b..</text></g><g><title>get_credentials (httpx/_utils.py:154) (1 samples, 2.70%)</title><rect x="43.2432%" y="244" width="2.7027%" height="15" fill="rgb(235,93,37)" fg:x="16" fg:w="1"/><text x="43.4932%" y="254.50">ge..</text></g><g><title>netrc_info (httpx/_utils.py:145) (1 samples, 2.70%)</title><rect x="43.2432%" y="260" width="2.7027%" height="15" fill="rgb(213,116,39)" fg:x="16" fg:w="1"/><text x="43.4932%" y="270.50">ne..</text></g><g><title>is_file (pathlib.py:1322) (1 samples, 2.70%)</title><rect x="43.2432%" y="276" width="2.7027%" height="15" fill="rgb(222,207,29)" fg:x="16" fg:w="1"/><text x="43.4932%" y="286.50">is..</text></g><g><title>stat (pathlib.py:1097) (1 samples, 2.70%)</title><rect x="43.2432%" y="292" width="2.7027%" height="15" fill="rgb(206,96,30)" fg:x="16" fg:w="1"/><text x="43.4932%" y="302.50">st..</text></g><g><title>_send_handling_auth (httpx/_client.py:1637) (1 samples, 2.70%)</title><rect x="45.9459%" y="228" width="2.7027%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="1"/><text x="46.1959%" y="238.50">_s..</text></g><g><title>connect_tcp (httpcore/backends/asyncio.py:107) (1 samples, 2.70%)</title><rect x="48.6486%" y="356" width="2.7027%" height="15" fill="rgb(250,191,14)" fg:x="18" fg:w="1"/><text x="48.8986%" y="366.50">co..</text></g><g><title>__exit__ (contextlib.py:143) (1 samples, 2.70%)</title><rect x="48.6486%" y="372" width="2.7027%" height="15" fill="rgb(239,60,40)" fg:x="18" fg:w="1"/><text x="48.8986%" y="382.50">__..</text></g><g><title>_connect (httpcore/_async/connection.py:111) (2 samples, 5.41%)</title><rect x="48.6486%" y="324" width="5.4054%" height="15" fill="rgb(206,27,48)" fg:x="18" fg:w="2"/><text x="48.8986%" y="334.50">_connec..</text></g><g><title>connect_tcp (httpcore/backends/auto.py:29) (2 samples, 5.41%)</title><rect x="48.6486%" y="340" width="5.4054%" height="15" fill="rgb(225,35,8)" fg:x="18" fg:w="2"/><text x="48.8986%" y="350.50">connect..</text></g><g><title>connect_tcp (httpcore/backends/asyncio.py:109) (1 samples, 2.70%)</title><rect x="51.3514%" y="356" width="2.7027%" height="15" fill="rgb(250,213,24)" fg:x="19" fg:w="1"/><text x="51.6014%" y="366.50">co..</text></g><g><title>connect_tcp (anyio/_core/_sockets.py:216) (1 samples, 2.70%)</title><rect x="51.3514%" y="372" width="2.7027%" height="15" fill="rgb(247,123,22)" fg:x="19" fg:w="1"/><text x="51.6014%" y="382.50">co..</text></g><g><title>start_soon (anyio/_backends/_asyncio.py:794) (1 samples, 2.70%)</title><rect x="51.3514%" y="388" width="2.7027%" height="15" fill="rgb(231,138,38)" fg:x="19" fg:w="1"/><text x="51.6014%" y="398.50">st..</text></g><g><title>_spawn (anyio/_backends/_asyncio.py:726) (1 samples, 2.70%)</title><rect x="51.3514%" y="404" width="2.7027%" height="15" fill="rgb(231,145,46)" fg:x="19" fg:w="1"/><text x="51.6014%" y="414.50">_s..</text></g><g><title>_connect (httpcore/_async/connection.py:135) (1 samples, 2.70%)</title><rect x="54.0541%" y="324" width="2.7027%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="1"/><text x="54.3041%" y="334.50">_c..</text></g><g><title>_call_sslobject_method (anyio/streams/tls.py:128) (2 samples, 5.41%)</title><rect x="56.7568%" y="372" width="5.4054%" height="15" fill="rgb(217,147,25)" fg:x="21" fg:w="2"/><text x="57.0068%" y="382.50">_call_s..</text></g><g><title>send (anyio/_backends/_asyncio.py:1300) (2 samples, 5.41%)</title><rect x="56.7568%" y="388" width="5.4054%" height="15" fill="rgb(247,81,37)" fg:x="21" fg:w="2"/><text x="57.0068%" y="398.50">send (a..</text></g><g><title>write (asyncio/selector_events.py:916) (2 samples, 5.41%)</title><rect x="56.7568%" y="404" width="5.4054%" height="15" fill="rgb(209,12,38)" fg:x="21" fg:w="2"/><text x="57.0068%" y="414.50">write (..</text></g><g><title>_call_sslobject_method (anyio/streams/tls.py:130) (3 samples, 8.11%)</title><rect x="62.1622%" y="372" width="8.1081%" height="15" fill="rgb(227,1,9)" fg:x="23" fg:w="3"/><text x="62.4122%" y="382.50">_call_sslob..</text></g><g><title>do_handshake (ssl.py:975) (3 samples, 8.11%)</title><rect x="62.1622%" y="388" width="8.1081%" height="15" fill="rgb(248,47,43)" fg:x="23" fg:w="3"/><text x="62.4122%" y="398.50">do_handshak..</text></g><g><title>handle_async_request (httpcore/_async/connection.py:63) (9 samples, 24.32%)</title><rect x="48.6486%" y="308" width="24.3243%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="9"/><text x="48.8986%" y="318.50">handle_async_request (httpcore/_async/c..</text></g><g><title>_connect (httpcore/_async/connection.py:151) (6 samples, 16.22%)</title><rect x="56.7568%" y="324" width="16.2162%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="6"/><text x="57.0068%" y="334.50">_connect (httpcore/_async..</text></g><g><title>start_tls (httpcore/backends/asyncio.py:67) (6 samples, 16.22%)</title><rect x="56.7568%" y="340" width="16.2162%" height="15" fill="rgb(222,148,37)" fg:x="21" fg:w="6"/><text x="57.0068%" y="350.50">start_tls (httpcore/backe..</text></g><g><title>wrap (anyio/streams/tls.py:122) (6 samples, 16.22%)</title><rect x="56.7568%" y="356" width="16.2162%" height="15" fill="rgb(234,67,33)" fg:x="21" fg:w="6"/><text x="57.0068%" y="366.50">wrap (anyio/streams/tls.p..</text></g><g><title>_call_sslobject_method (anyio/streams/tls.py:137) (1 samples, 2.70%)</title><rect x="70.2703%" y="372" width="2.7027%" height="15" fill="rgb(247,98,35)" fg:x="26" fg:w="1"/><text x="70.5203%" y="382.50">_c..</text></g><g><title>receive (anyio/_backends/_asyncio.py:1264) (1 samples, 2.70%)</title><rect x="70.2703%" y="388" width="2.7027%" height="15" fill="rgb(247,138,52)" fg:x="26" fg:w="1"/><text x="70.5203%" y="398.50">re..</text></g><g><title>resume_reading (asyncio/selector_events.py:806) (1 samples, 2.70%)</title><rect x="70.2703%" y="404" width="2.7027%" height="15" fill="rgb(213,79,30)" fg:x="26" fg:w="1"/><text x="70.5203%" y="414.50">re..</text></g><g><title>_add_reader (asyncio/selector_events.py:752) (1 samples, 2.70%)</title><rect x="70.2703%" y="420" width="2.7027%" height="15" fill="rgb(246,177,23)" fg:x="26" fg:w="1"/><text x="70.5203%" y="430.50">_a..</text></g><g><title>_add_reader (asyncio/selector_events.py:258) (1 samples, 2.70%)</title><rect x="70.2703%" y="436" width="2.7027%" height="15" fill="rgb(230,62,27)" fg:x="26" fg:w="1"/><text x="70.5203%" y="446.50">_a..</text></g><g><title>register (selectors.py:518) (1 samples, 2.70%)</title><rect x="70.2703%" y="452" width="2.7027%" height="15" fill="rgb(216,154,8)" fg:x="26" fg:w="1"/><text x="70.5203%" y="462.50">re..</text></g><g><title>handle_async_request (httpcore/_async/connection.py:68) (1 samples, 2.70%)</title><rect x="72.9730%" y="308" width="2.7027%" height="15" fill="rgb(244,35,45)" fg:x="27" fg:w="1"/><text x="73.2230%" y="318.50">ha..</text></g><g><title>selected_alpn_protocol (ssl.py:951) (1 samples, 2.70%)</title><rect x="72.9730%" y="324" width="2.7027%" height="15" fill="rgb(251,115,12)" fg:x="27" fg:w="1"/><text x="73.2230%" y="334.50">se..</text></g><g><title>handle_async_request (httpcore/_async/connection.py:79) (1 samples, 2.70%)</title><rect x="75.6757%" y="308" width="2.7027%" height="15" fill="rgb(240,54,50)" fg:x="28" fg:w="1"/><text x="75.9257%" y="318.50">ha..</text></g><g><title>handle_async_request (httpcore/_async/http11.py:73) (1 samples, 2.70%)</title><rect x="78.3784%" y="324" width="2.7027%" height="15" fill="rgb(233,84,52)" fg:x="29" fg:w="1"/><text x="78.6284%" y="334.50">ha..</text></g><g><title>_send_request_headers (httpcore/_async/http11.py:114) (1 samples, 2.70%)</title><rect x="78.3784%" y="340" width="2.7027%" height="15" fill="rgb(207,117,47)" fg:x="29" fg:w="1"/><text x="78.6284%" y="350.50">_s..</text></g><g><title>__init__ (h11/_events.py:55) (1 samples, 2.70%)</title><rect x="78.3784%" y="356" width="2.7027%" height="15" fill="rgb(249,43,39)" fg:x="29" fg:w="1"/><text x="78.6284%" y="366.50">__..</text></g><g><title>normalize_and_validate (h11/_headers.py:131) (1 samples, 2.70%)</title><rect x="78.3784%" y="372" width="2.7027%" height="15" fill="rgb(209,38,44)" fg:x="29" fg:w="1"/><text x="78.6284%" y="382.50">no..</text></g><g><title>validate (h11/_util.py:84) (1 samples, 2.70%)</title><rect x="78.3784%" y="388" width="2.7027%" height="15" fill="rgb(236,212,23)" fg:x="29" fg:w="1"/><text x="78.6284%" y="398.50">va..</text></g><g><title>next_event (h11/_connection.py:425) (1 samples, 2.70%)</title><rect x="81.0811%" y="372" width="2.7027%" height="15" fill="rgb(242,79,21)" fg:x="30" fg:w="1"/><text x="81.3311%" y="382.50">ne..</text></g><g><title>_extract_next_receive_event (h11/_connection.py:367) (1 samples, 2.70%)</title><rect x="81.0811%" y="388" width="2.7027%" height="15" fill="rgb(211,96,35)" fg:x="30" fg:w="1"/><text x="81.3311%" y="398.50">_e..</text></g><g><title>maybe_read_from_SEND_RESPONSE_server (h11/_readers.py:84) (1 samples, 2.70%)</title><rect x="81.0811%" y="404" width="2.7027%" height="15" fill="rgb(253,215,40)" fg:x="30" fg:w="1"/><text x="81.3311%" y="414.50">ma..</text></g><g><title>maybe_extract_lines (h11/_receivebuffer.py:125) (1 samples, 2.70%)</title><rect x="81.0811%" y="420" width="2.7027%" height="15" fill="rgb(211,81,21)" fg:x="30" fg:w="1"/><text x="81.3311%" y="430.50">ma..</text></g><g><title>_receive_event (httpcore/_async/http11.py:174) (2 samples, 5.41%)</title><rect x="81.0811%" y="356" width="5.4054%" height="15" fill="rgb(208,190,38)" fg:x="30" fg:w="2"/><text x="81.3311%" y="366.50">_receiv..</text></g><g><title>next_event (h11/_connection.py:429) (1 samples, 2.70%)</title><rect x="83.7838%" y="372" width="2.7027%" height="15" fill="rgb(235,213,38)" fg:x="31" fg:w="1"/><text x="84.0338%" y="382.50">ne..</text></g><g><title>__len__ (h11/_receivebuffer.py:60) (1 samples, 2.70%)</title><rect x="83.7838%" y="388" width="2.7027%" height="15" fill="rgb(237,122,38)" fg:x="31" fg:w="1"/><text x="84.0338%" y="398.50">__..</text></g><g><title>_call_sslobject_method (anyio/streams/tls.py:130) (2 samples, 5.41%)</title><rect x="86.4865%" y="404" width="5.4054%" height="15" fill="rgb(244,218,35)" fg:x="32" fg:w="2"/><text x="86.7365%" y="414.50">_call_s..</text></g><g><title>read (ssl.py:917) (1 samples, 2.70%)</title><rect x="89.1892%" y="420" width="2.7027%" height="15" fill="rgb(240,68,47)" fg:x="33" fg:w="1"/><text x="89.4392%" y="430.50">re..</text></g><g><title>send (httpx/_client.py:1614) (18 samples, 48.65%)</title><rect x="45.9459%" y="212" width="48.6486%" height="15" fill="rgb(210,16,53)" fg:x="17" fg:w="18"/><text x="46.1959%" y="222.50">send (httpx/_client.py:1614)</text></g><g><title>_send_handling_auth (httpx/_client.py:1642) (17 samples, 45.95%)</title><rect x="48.6486%" y="228" width="45.9459%" height="15" fill="rgb(235,124,12)" fg:x="18" fg:w="17"/><text x="48.8986%" y="238.50">_send_handling_auth (httpx/_client.py:1642)</text></g><g><title>_send_handling_redirects (httpx/_client.py:1679) (17 samples, 45.95%)</title><rect x="48.6486%" y="244" width="45.9459%" height="15" fill="rgb(224,169,11)" fg:x="18" fg:w="17"/><text x="48.8986%" y="254.50">_send_handling_redirects (httpx/_client.py:1679)</text></g><g><title>_send_single_request (httpx/_client.py:1716) (17 samples, 45.95%)</title><rect x="48.6486%" y="260" width="45.9459%" height="15" fill="rgb(250,166,2)" fg:x="18" fg:w="17"/><text x="48.8986%" y="270.50">_send_single_request (httpx/_client.py:1716)</text></g><g><title>handle_async_request (httpx/_transports/default.py:353) (17 samples, 45.95%)</title><rect x="48.6486%" y="276" width="45.9459%" height="15" fill="rgb(242,216,29)" fg:x="18" fg:w="17"/><text x="48.8986%" y="286.50">handle_async_request (httpx/_transports/default.py:353)</text></g><g><title>handle_async_request (httpcore/_async/connection_pool.py:238) (17 samples, 45.95%)</title><rect x="48.6486%" y="292" width="45.9459%" height="15" fill="rgb(230,116,27)" fg:x="18" fg:w="17"/><text x="48.8986%" y="302.50">handle_async_request (httpcore/_async/connection_pool.py:238)</text></g><g><title>handle_async_request (httpcore/_async/connection.py:90) (6 samples, 16.22%)</title><rect x="78.3784%" y="308" width="16.2162%" height="15" fill="rgb(228,99,48)" fg:x="29" fg:w="6"/><text x="78.6284%" y="318.50">handle_async_request (htt..</text></g><g><title>handle_async_request (httpcore/_async/http11.py:79) (5 samples, 13.51%)</title><rect x="81.0811%" y="324" width="13.5135%" height="15" fill="rgb(253,11,6)" fg:x="30" fg:w="5"/><text x="81.3311%" y="334.50">handle_async_request..</text></g><g><title>_receive_response_headers (httpcore/_async/http11.py:148) (5 samples, 13.51%)</title><rect x="81.0811%" y="340" width="13.5135%" height="15" fill="rgb(247,143,39)" fg:x="30" fg:w="5"/><text x="81.3311%" y="350.50">_receive_response_he..</text></g><g><title>_receive_event (httpcore/_async/http11.py:177) (3 samples, 8.11%)</title><rect x="86.4865%" y="356" width="8.1081%" height="15" fill="rgb(236,97,10)" fg:x="32" fg:w="3"/><text x="86.7365%" y="366.50">_receive_ev..</text></g><g><title>read (httpcore/backends/asyncio.py:33) (3 samples, 8.11%)</title><rect x="86.4865%" y="372" width="8.1081%" height="15" fill="rgb(233,208,19)" fg:x="32" fg:w="3"/><text x="86.7365%" y="382.50">read (httpc..</text></g><g><title>receive (anyio/streams/tls.py:195) (3 samples, 8.11%)</title><rect x="86.4865%" y="388" width="8.1081%" height="15" fill="rgb(216,164,2)" fg:x="32" fg:w="3"/><text x="86.7365%" y="398.50">receive (an..</text></g><g><title>_call_sslobject_method (anyio/streams/tls.py:146) (1 samples, 2.70%)</title><rect x="91.8919%" y="404" width="2.7027%" height="15" fill="rgb(220,129,5)" fg:x="34" fg:w="1"/><text x="92.1419%" y="414.50">_c..</text></g><g><title>aiter_bytes (httpx/_models.py:911) (1 samples, 2.70%)</title><rect x="94.5946%" y="260" width="2.7027%" height="15" fill="rgb(242,17,10)" fg:x="35" fg:w="1"/><text x="94.8446%" y="270.50">ai..</text></g><g><title>_get_content_decoder (httpx/_models.py:618) (1 samples, 2.70%)</title><rect x="94.5946%" y="276" width="2.7027%" height="15" fill="rgb(242,107,0)" fg:x="35" fg:w="1"/><text x="94.8446%" y="286.50">_g..</text></g><g><title>__init__ (httpx/_decoders.py:72) (1 samples, 2.70%)</title><rect x="94.5946%" y="292" width="2.7027%" height="15" fill="rgb(251,28,31)" fg:x="35" fg:w="1"/><text x="94.8446%" y="302.50">__..</text></g><g><title>all (37 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="37"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (main.py:17) (37 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="37"/><text x="0.2500%" y="78.50">&lt;module&gt; (main.py:17)</text></g><g><title>run (asyncio/runners.py:44) (37 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="37"/><text x="0.2500%" y="94.50">run (asyncio/runners.py:44)</text></g><g><title>run_until_complete (asyncio/base_events.py:633) (37 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="37"/><text x="0.2500%" y="110.50">run_until_complete (asyncio/base_events.py:633)</text></g><g><title>run_forever (asyncio/base_events.py:600) (37 samples, 100.00%)</title><rect x="0.0000%" y="116" width="100.0000%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="37"/><text x="0.2500%" y="126.50">run_forever (asyncio/base_events.py:600)</text></g><g><title>_run_once (asyncio/base_events.py:1896) (37 samples, 100.00%)</title><rect x="0.0000%" y="132" width="100.0000%" height="15" fill="rgb(247,70,30)" fg:x="0" fg:w="37"/><text x="0.2500%" y="142.50">_run_once (asyncio/base_events.py:1896)</text></g><g><title>_run (asyncio/events.py:80) (37 samples, 100.00%)</title><rect x="0.0000%" y="148" width="100.0000%" height="15" fill="rgb(212,68,19)" fg:x="0" fg:w="37"/><text x="0.2500%" y="158.50">_run (asyncio/events.py:80)</text></g><g><title>main (main.py:13) (22 samples, 59.46%)</title><rect x="40.5405%" y="164" width="59.4595%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="22"/><text x="40.7905%" y="174.50">main (main.py:13)</text></g><g><title>get (httpx/_client.py:1751) (22 samples, 59.46%)</title><rect x="40.5405%" y="180" width="59.4595%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="22"/><text x="40.7905%" y="190.50">get (httpx/_client.py:1751)</text></g><g><title>request (httpx/_client.py:1527) (22 samples, 59.46%)</title><rect x="40.5405%" y="196" width="59.4595%" height="15" fill="rgb(206,192,2)" fg:x="15" fg:w="22"/><text x="40.7905%" y="206.50">request (httpx/_client.py:1527)</text></g><g><title>send (httpx/_client.py:1622) (2 samples, 5.41%)</title><rect x="94.5946%" y="212" width="5.4054%" height="15" fill="rgb(241,108,4)" fg:x="35" fg:w="2"/><text x="94.8446%" y="222.50">send (h..</text></g><g><title>aread (httpx/_models.py:896) (2 samples, 5.41%)</title><rect x="94.5946%" y="228" width="5.4054%" height="15" fill="rgb(247,173,49)" fg:x="35" fg:w="2"/><text x="94.8446%" y="238.50">aread (..</text></g><g><title>&lt;listcomp&gt; (httpx/_models.py:896) (2 samples, 5.41%)</title><rect x="94.5946%" y="244" width="5.4054%" height="15" fill="rgb(224,114,35)" fg:x="35" fg:w="2"/><text x="94.8446%" y="254.50">&lt;listco..</text></g><g><title>aiter_bytes (httpx/_models.py:914) (1 samples, 2.70%)</title><rect x="97.2973%" y="260" width="2.7027%" height="15" fill="rgb(245,159,27)" fg:x="36" fg:w="1"/><text x="97.5473%" y="270.50">ai..</text></g><g><title>aiter_raw (httpx/_models.py:980) (1 samples, 2.70%)</title><rect x="97.2973%" y="276" width="2.7027%" height="15" fill="rgb(245,172,44)" fg:x="36" fg:w="1"/><text x="97.5473%" y="286.50">ai..</text></g><g><title>aclose (httpx/_models.py:993) (1 samples, 2.70%)</title><rect x="97.2973%" y="292" width="2.7027%" height="15" fill="rgb(236,23,11)" fg:x="36" fg:w="1"/><text x="97.5473%" y="302.50">ac..</text></g><g><title>aclose (httpx/_client.py:152) (1 samples, 2.70%)</title><rect x="97.2973%" y="308" width="2.7027%" height="15" fill="rgb(205,117,38)" fg:x="36" fg:w="1"/><text x="97.5473%" y="318.50">ac..</text></g><g><title>aclose (httpx/_transports/default.py:244) (1 samples, 2.70%)</title><rect x="97.2973%" y="324" width="2.7027%" height="15" fill="rgb(237,72,25)" fg:x="36" fg:w="1"/><text x="97.5473%" y="334.50">ac..</text></g><g><title>aclose (httpcore/_async/connection_pool.py:352) (1 samples, 2.70%)</title><rect x="97.2973%" y="340" width="2.7027%" height="15" fill="rgb(244,70,9)" fg:x="36" fg:w="1"/><text x="97.5473%" y="350.50">ac..</text></g><g><title>aclose (httpcore/_async/http11.py:306) (1 samples, 2.70%)</title><rect x="97.2973%" y="356" width="2.7027%" height="15" fill="rgb(217,125,39)" fg:x="36" fg:w="1"/><text x="97.5473%" y="366.50">ac..</text></g><g><title>_response_closed (httpcore/_async/http11.py:198) (1 samples, 2.70%)</title><rect x="97.2973%" y="372" width="2.7027%" height="15" fill="rgb(235,36,10)" fg:x="36" fg:w="1"/><text x="97.5473%" y="382.50">_r..</text></g><g><title>__aexit__ (httpcore/_synchronization.py:24) (1 samples, 2.70%)</title><rect x="97.2973%" y="388" width="2.7027%" height="15" fill="rgb(251,123,47)" fg:x="36" fg:w="1"/><text x="97.5473%" y="398.50">__..</text></g><g><title>release (anyio/_core/_synchronization.py:165) (1 samples, 2.70%)</title><rect x="97.2973%" y="404" width="2.7027%" height="15" fill="rgb(221,13,13)" fg:x="36" fg:w="1"/><text x="97.5473%" y="414.50">re..</text></g><g><title>get_current_task (anyio/_core/_testing.py:64) (1 samples, 2.70%)</title><rect x="97.2973%" y="420" width="2.7027%" height="15" fill="rgb(238,131,9)" fg:x="36" fg:w="1"/><text x="97.5473%" y="430.50">ge..</text></g><g><title>get_asynclib (anyio/_core/_eventloop.py:149) (1 samples, 2.70%)</title><rect x="97.2973%" y="436" width="2.7027%" height="15" fill="rgb(211,50,8)" fg:x="36" fg:w="1"/><text x="97.5473%" y="446.50">ge..</text></g><g><title>current_async_library (sniffio/_impl.py:70) (1 samples, 2.70%)</title><rect x="97.2973%" y="452" width="2.7027%" height="15" fill="rgb(245,182,24)" fg:x="36" fg:w="1"/><text x="97.5473%" y="462.50">cu..</text></g></svg></svg>